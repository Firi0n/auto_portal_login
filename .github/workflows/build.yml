name: Build PyInstaller Executables

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag name for the release (e.g. v1.0.0)"
        required: true

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Step 1: Clone the repository
      - name: Checkout repo
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Step 3: Install Python dependencies including PyInstaller
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Step 4: Install Playwright and its required browser binaries
      - name: Install Playwright and browsers
        run: |
          python -m playwright install --with-deps

      # Step 5: Build a single-file executable from login.py
      - name: Build executable
        run: |
          pyinstaller --onefile --collect-all playwright login.py

      # Step 6: Rename executable to include OS in filename
      - name: Rename executable for ${{ matrix.os }}
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv dist/login.exe dist/login-windows.exe
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            mv dist/login dist/login-linux
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            mv dist/login dist/login-macos
          fi

      # Step 7: Upload the built executable to GitHub Release
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          files: |
            dist/login-*
