name: Build and Release

on:
  # Trigger workflow when a tag matching the pattern (e.g., v1.0.0) is pushed
  push:
    tags:
      - "v*.*.*"

  # Allow manual trigger of the workflow with a required tag_name input
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag version to release (e.g., v1.2.3)"
        required: true

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      PYTHONIOENCODING: utf-8
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] # Run build on multiple OS platforms

    steps:
      # Checkout the latest code from the repository
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      # Set up Python 3.11 environment
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Run the build script that creates a virtual environment, installs dependencies, and builds the app
      - name: 🧱 Build project
        run: python build.py

      # Determine which tag to use for the release:
      # - If the workflow was manually triggered, use the provided input tag_name
      # - Otherwise, extract the tag from the GitHub ref for a tag push event
      - name: 🆔 Determine tag name
        id: tag
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> "$GITHUB_ENV"
          else
            echo "TAG_NAME=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
          fi

      # Rename the generated executable to include the OS platform suffix for clarity and easier distribution
      - name: 🔀 Rename build artifact with platform suffix
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/LoginApp.exe dist/LoginApp-windows.exe
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv dist/LoginApp dist/LoginApp-macos
          else
            mv dist/LoginApp dist/LoginApp-linux
          fi

      # Create a GitHub release using the determined tag and upload the renamed build artifacts
      - name: 🚀 Create GitHub Release
        if: env.TAG_NAME != ''
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
